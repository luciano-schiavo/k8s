# This is a basic workflow to help you get started with Actions

name: Build and push the tagged build to production

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    tags: 
      - 'v*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_push_image:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Fetch latest version
        id: fetch_version
        run: echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: Docker Login
        uses: docker/login-action@v3.1.0
        with:
         registry: ${{ secrets.ACR_NAME }}
         username: ${{ secrets.ACR_LOGIN }}
         password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push production images
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          push: true
          tags: ${{secrets.ACR_NAME}}/contoso-website:latest,${{secrets.ACR_NAME}}/contoso-website:${{ steps.fetch_version.outputs.TAG }}
    
  deploy:
    runs-on: ubuntu-20.04
    needs: build_push_image
    permissions:
        id-token: write
        
    steps:
        - uses: actions/checkout@v2
        
        - name: Helm tool installer
          uses: Azure/setup-helm@v3
          with:
             version: v3.3.1

        - name: Azure Login
          uses: Azure/login@v2.0.0
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

        - name: Azure Kubernetes set context
          uses: Azure/aks-set-context@v3
          with:
            resource-group: ${{ secrets.RESOURCE_GROUP }}
            cluster-name: ${{ secrets.CLUSTER_NAME }}

        - name: Docker Login
          uses: docker/login-action@v3.1.0
          with:
              registry: ${{ secrets.ACR_NAME }}
              username: ${{ secrets.ACR_LOGIN }}
              password: ${{ secrets.ACR_PASSWORD }}
        
        - name: Run Helm Deploy
          run: |
              helm upgrade \
                --install \
                --create-namespace \
                --atomic \
                --wait \
                --namespace production \
                contoso-website \
                ./kubernetes/contoso-website \
                --set image.repository=${{ secrets.ACR_NAME }} \
                --set dns.name=${{ secrets.DNS_NAME }}
                --set image.tag=${GITHUB_REF##*/} 
                
